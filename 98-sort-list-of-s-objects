public List<Account> getAccounts(List<Account> accounts) {
    List<AccWrapper> accWrapperList = new List<AccWrapper>();
    for(Account acc : accounts){
        accWrapperList.add(new AccWrapper(acc));
    }
    accWrapperList.sort();
    List<Account> ans;
    for(AccWrapper accWrap : accWrapperList){
        ans.add(accWrap.acc);
    }
    return ans;
}
// write extra class here 
Public Class AccWrapper implements Comparable{
    public Account acc;
    public AccWrapper(Account acc){
        if(acc == null){
            Exception e = new NullPointerException();
            e.setMessage('Account argument cannot be null');
            throw e;
        }
        this.acc = acc;
    }

    Public Integer compareTo(Object compAcc){
        AccWrapper compToAcc = (AccWrapper)compAcc;
        Integer returnInt =0;
        if((acc.AnnualRevenue == compToAcc.acc.AnnualRevenue) || (acc.AnnualRevenue ==null && compToAcc.acc.AnnualRevenue==null)) returnInt =0;
        else if((acc.AnnualRevenue < compToAcc.acc.AnnualRevenue) || (acc.AnnualRevenue ==null && compToAcc.acc.AnnualRevenue != null)) returnInt =-1;
        else if((acc.AnnualRevenue > compToAcc.acc.AnnualRevenue) || (acc.AnnualRevenue !=null && compToAcc.acc.AnnualRevenue == null)) returnInt = 1;
        return returnInt;
    }
}
